name: Deploy Insert Statements to RDS

on:
  pull_request:
    types:
      - closed  
    branches:
      - dev  

jobs:
  deploy:
    environment: dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Find the Latest Merged Folder
        run: |
          echo "Fetching recent commits..."
          git fetch --prune

          # Find the latest merged folder in the 'dev' branch
          RECENT_FOLDER=$(git diff --name-only HEAD~1 HEAD | grep '/' | cut -d'/' -f1 | sort | uniq | tail -n 1)

          if [ -z "$RECENT_FOLDER" ]; then
            echo "No recently merged folder found. Exiting."
            exit 1
          fi

          echo "Found RECENT_FOLDER: $RECENT_FOLDER"
          echo "RECENT_FOLDER=$RECENT_FOLDER" >> $GITHUB_ENV

      - name: List SQL Files in Folder
        run: |
          echo "SQL Files in Merged Folder ($RECENT_FOLDER):"
          ls -l $RECENT_FOLDER || echo "No SQL files found."

      - name: Identify SQL File with Insert Statements
        run: |
          INSERT_SQL_FILE=$(find $RECENT_FOLDER -type f -name "*_rds.sql" | head -n 1)
          
          if [ -z "$INSERT_SQL_FILE" ]; then
            echo "No RDS SQL file found. Exiting."
            exit 1
          fi

          echo "INSERT_SQL_FILE=$INSERT_SQL_FILE" >> $GITHUB_ENV
          echo "Found INSERT_SQL_FILE: $INSERT_SQL_FILE"

      - name: Debug Secret Variables
        run: |
          echo "DB_HOST: ${{ secrets.DB_HOST }}"
          echo "DB_PORT: ${{ secrets.DB_PORT }}"
          echo "DB_DATABASE: ${{ secrets.DB_NAME }}"
          echo "DB_USER: ${{ secrets.DB_USER }}"
          echo "DB_PASSWORD length: ${#PGPASSWORD}"

      - name: Connect to RDS and Run Insert Statements
        env:
          PGHOST: ${{ secrets.DB_HOST }}
          PGPORT: ${{ secrets.DB_PORT }}
          PGDATABASE: ${{ secrets.DB_NAME }}
          PGUSER: ${{ secrets.DB_USER }}
          PGPASSWORD: '${{ secrets.DB_PASSWORD }}'
        run: |
          psql -h $PGHOST -p $PGPORT -d $PGDATABASE -U $PGUSER -f $INSERT_SQL_FILE
